.TH "QwtNullPaintDevice" 3 "Thu Dec 11 2014" "Version 6.1.2" "Qwt User's Guide" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtNullPaintDevice \- 
.PP
A null paint device doing nothing\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qwt_null_paintdevice\&.h>\fP
.PP
Inherits QPaintDevice\&.
.PP
Inherited by \fBQwtGraphic\fP, and QwtStyleSheetRecorder\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBMode\fP { \fBNormalMode\fP, \fBPolygonPathMode\fP, \fBPathMode\fP }"
.br
.RI "\fIRender mode\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQwtNullPaintDevice\fP ()"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "virtual \fB~QwtNullPaintDevice\fP ()"
.br
.RI "\fIDestructor\&. \fP"
.ti -1c
.RI "void \fBsetMode\fP (\fBMode\fP)"
.br
.ti -1c
.RI "\fBMode\fP \fBmode\fP () const "
.br
.ti -1c
.RI "virtual QPaintEngine * \fBpaintEngine\fP () const "
.br
.RI "\fISee QPaintDevice::paintEngine() \fP"
.ti -1c
.RI "virtual int \fBmetric\fP (PaintDeviceMetric metric) const "
.br
.ti -1c
.RI "virtual void \fBdrawRects\fP (const QRect *, int)"
.br
.RI "\fISee QPaintEngine::drawRects() \fP"
.ti -1c
.RI "virtual void \fBdrawRects\fP (const QRectF *, int)"
.br
.RI "\fISee QPaintEngine::drawRects() \fP"
.ti -1c
.RI "virtual void \fBdrawLines\fP (const QLine *, int)"
.br
.RI "\fISee QPaintEngine::drawLines() \fP"
.ti -1c
.RI "virtual void \fBdrawLines\fP (const QLineF *, int)"
.br
.RI "\fISee QPaintEngine::drawLines() \fP"
.ti -1c
.RI "virtual void \fBdrawEllipse\fP (const QRectF &)"
.br
.RI "\fISee QPaintEngine::drawEllipse() \fP"
.ti -1c
.RI "virtual void \fBdrawEllipse\fP (const QRect &)"
.br
.RI "\fISee QPaintEngine::drawEllipse() \fP"
.ti -1c
.RI "virtual void \fBdrawPath\fP (const QPainterPath &)"
.br
.RI "\fISee QPaintEngine::drawPath() \fP"
.ti -1c
.RI "virtual void \fBdrawPoints\fP (const QPointF *, int)"
.br
.RI "\fISee QPaintEngine::drawPoints() \fP"
.ti -1c
.RI "virtual void \fBdrawPoints\fP (const QPoint *, int)"
.br
.RI "\fISee QPaintEngine::drawPoints() \fP"
.ti -1c
.RI "virtual void \fBdrawPolygon\fP (const QPointF *, int, QPaintEngine::PolygonDrawMode)"
.br
.RI "\fISee QPaintEngine::drawPolygon() \fP"
.ti -1c
.RI "virtual void \fBdrawPolygon\fP (const QPoint *, int, QPaintEngine::PolygonDrawMode)"
.br
.RI "\fISee QPaintEngine::drawPolygon() \fP"
.ti -1c
.RI "virtual void \fBdrawPixmap\fP (const QRectF &, const QPixmap &, const QRectF &)"
.br
.RI "\fISee QPaintEngine::drawPixmap() \fP"
.ti -1c
.RI "virtual void \fBdrawTextItem\fP (const QPointF &, const QTextItem &)"
.br
.RI "\fISee QPaintEngine::drawTextItem() \fP"
.ti -1c
.RI "virtual void \fBdrawTiledPixmap\fP (const QRectF &, const QPixmap &, const QPointF &s)"
.br
.RI "\fISee QPaintEngine::drawTiledPixmap() \fP"
.ti -1c
.RI "virtual void \fBdrawImage\fP (const QRectF &, const QImage &, const QRectF &, Qt::ImageConversionFlags)"
.br
.RI "\fISee QPaintEngine::drawImage() \fP"
.ti -1c
.RI "virtual void \fBupdateState\fP (const QPaintEngineState &state)"
.br
.RI "\fISee QPaintEngine::updateState() \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual QSize \fBsizeMetrics\fP () const =0"
.br
.in -1c
.SH "Detailed Description"
.PP 
A null paint device doing nothing\&. 

Sometimes important layout/rendering geometries are not available or changeable from the public Qt class interface\&. ( f\&.e hidden in the style implementation )\&.
.PP
\fBQwtNullPaintDevice\fP can be used to manipulate or filter out this information by analyzing the stream of paint primitives\&.
.PP
F\&.e\&. \fBQwtNullPaintDevice\fP is used by \fBQwtPlotCanvas\fP to identify styled backgrounds with rounded corners\&. 
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBQwtNullPaintDevice::Mode\fP"

.PP
Render mode\&. 
.PP
\fBSee Also:\fP
.RS 4
\fBsetMode()\fP, \fBmode()\fP 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINormalMode \fP\fP
All vector graphic primitives are painted by the corresponding draw methods 
.TP
\fB\fIPolygonPathMode \fP\fP
Vector graphic primitives ( beside polygons ) are mapped to a QPainterPath and are painted by drawPath\&. In PathMode mode only a few draw methods are called:
.PP
.IP "\(bu" 2
\fBdrawPath()\fP
.IP "\(bu" 2
\fBdrawPixmap()\fP
.IP "\(bu" 2
\fBdrawImage()\fP
.IP "\(bu" 2
\fBdrawPolygon()\fP 
.PP

.TP
\fB\fIPathMode \fP\fP
Vector graphic primitives are mapped to a QPainterPath and are painted by drawPath\&. In PathMode mode only a few draw methods are called:
.PP
.IP "\(bu" 2
\fBdrawPath()\fP
.IP "\(bu" 2
\fBdrawPixmap()\fP
.IP "\(bu" 2
\fBdrawImage()\fP 
.PP

.SH "Member Function Documentation"
.PP 
.SS "int QwtNullPaintDevice::metric (PaintDeviceMetricdeviceMetric) const\fC [virtual]\fP"
See QPaintDevice::metric()
.PP
\fBParameters:\fP
.RS 4
\fIdeviceMetric\fP Type of metric 
.RE
.PP
\fBReturns:\fP
.RS 4
Metric information for the given paint device metric\&.
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBsizeMetrics()\fP 
.RE
.PP

.SS "\fBQwtNullPaintDevice::Mode\fP QwtNullPaintDevice::mode () const"

.PP
\fBReturns:\fP
.RS 4
Render mode 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBsetMode()\fP 
.RE
.PP

.SS "void QwtNullPaintDevice::setMode (\fBMode\fPmode)"
Set the render mode
.PP
\fBParameters:\fP
.RS 4
\fImode\fP New mode 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBmode()\fP 
.RE
.PP

.SS "virtual QSize QwtNullPaintDevice::sizeMetrics () const\fC [protected]\fP, \fC [pure virtual]\fP"

.PP
\fBReturns:\fP
.RS 4
Size needed to implement \fBmetric()\fP 
.RE
.PP

.PP
Implemented in \fBQwtGraphic\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Qwt User's Guide from the source code\&.
